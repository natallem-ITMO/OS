#!/bin/bash

#3. Скрипт backup

#a. Скрипт создаст в /home/user/ каталог с именем Backup-YYYY-MM-DD, где YYYY-MM-DD – дата запуска скрипта, если в /home/user/ нет каталога с именем, соответствующим дате, отстоящей от текущей менее чем на 7 дней. Если в /home/user/ уже есть «действующий» каталог резервного копирования (созданный не ранее 7 дней от даты запуска скрипта), то новый каталог не создается. Для определения текущей даты можно воспользоваться командой date.

#b. Если новый каталог был создан, то скрипт скопирует в этот каталог все файлы из каталога /home/user/source/ (для тестирования скрипта создайте такую директорию и набор файлов в ней). После этого скрипт выведет в режиме дополнения в файл /home/user/backup-report следующую информацию: строка со сведениями о создании нового каталога с резервными копиями с указанием его имени и даты создания; список файлов из /home/user/source/, которые были скопированы в этот каталог.

#c. Если каталог не был создан (есть «действующий» каталог резервного копирования), то скрипт должен скопировать в него все файлы из /home/user/source/ по следующим правилам: если файла с таким именем в каталоге резервного копирования нет, то он копируется из /home/user/source. Если файл с таким именем есть, то его размер сравнивается с размером одноименного файла в действующем каталоге резервного копирования. Если размеры совпадают, файл не копируется. Если размеры отличаются, то файл копируется c автоматическим созданием версионной копии, таким образом, в действующем каталоге резервного копирования появляются обе версии файла (уже имеющийся файл переименовывается путем добавления дополнительного расширения «.YYYY-MM-DD» (дата запуска скрипта), а скопированный сохраняет имя). После окончания копирования в файл /home/user/backup-report выводится строка о внесении изменений в действующий каталог резервного копирования с указанием его имени и даты внесения изменений, затем строки, содержащие имена добавленных файлов с новыми именами, а затем строки с именами добавленных файлов с существовавшими в действующем каталоге резервного копирования именами с указанием через пробел нового имени, присвоенного предыдущей версии этого файла.

home="/home/natalem/"
seed="Backup-"
current="-"
source="/home/natalem/source/"
report="/home/natalem/backup-report"

if [ ! -d "$source" ]; then
	mkdir $source; 
fi;
touch "$report"


has_backup()
{
	for i in {0..7}; do
		checkDate=$(date -d '-'$i' day' +"%Y-%m-%d")
		current="$home$seed$checkDate"
 		if [[ -d $current ]]; then
     			return 0
		else 
			current="-"
   		fi   
	done
	checkDate=$(date +"%Y-%m-%d")
	current="$home$seed$checkDate"	
	return 1;
}

if has_backup; then
	echo "Previous directory with copies, date="$(date +"%Y-%m-%d")", name= $current." >> $report
	tmp=""
	for file in /home/natalem/source/* ; do
		if [[ -f $file ]] ;then 
			filename=$(echo "$file" | grep -Eo '[^\/]*$')    
    			copypath="$current/$filename"
			if [[ -e "$copypath" ]]; then
      				sz1=$(wc -c <"$file")
      				sz2=$(wc -c <"$copypath")
      				if [[ "$sz1" -ne "$sz2" ]]; then
       				mv "$copypath" "$copypath.$(date +%Y-%m-%d)"
        			cp "$file" "$copypath"
        			tmp="$tmp(previous) $filename $filename.$(date +%Y-%m-%d)\n"				
      				fi
    			else
      				 cp "$file" "$copypath"
      				 echo "$filename" >> $report;
    			fi
		fi
  	
	done
	
  	echo -e "$tmp" >> $report
#}

else 
	mkdir "$current"
	echo "Created directory with copies, date="$(date +"%Y-%m-%d")", name= $current." >> $report
	for file in /home/natalem/source/* ; do
		cp "$file" "$current"
	done
fi

